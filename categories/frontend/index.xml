<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Frontend on Technical Blog</title>
    <link>http://io.misostack.com/categories/frontend/</link>
    <description>Recent content in Frontend on Technical Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Feb 2018 13:59:11 +0700</lastBuildDate>
    
	<atom:link href="http://io.misostack.com/categories/frontend/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Webpack sass, external libs, html page</title>
      <link>http://io.misostack.com/posts/webpack-003/</link>
      <pubDate>Wed, 28 Feb 2018 13:59:11 +0700</pubDate>
      
      <guid>http://io.misostack.com/posts/webpack-003/</guid>
      <description>HTMLWebpackPlugin package.json
https://github.com/webpack-contrib/html-webpack-plugin
... &amp;quot;html-webpack-plugin&amp;quot;: &amp;quot;webpack-contrib/html-webpack-plugin&amp;quot;, ...  Styles Sass
npm install sass-loader node-sass --save-dev  Style
npm install style-loader css-loader --save-dev  Usually, it&#39;s recommended to extract the style sheets into a dedicated file in production using the ExtractTextPlugin. This way your styles are not dependent on JavaScript npm i -D extract-text-webpack-plugin@next  Images npm i -D file-loader copy-webpack-plugin  background-image: url(&amp;quot;~images/example.png&amp;quot;);  Config sample webpack.common.js  const webpack = require(&#39;webpack&#39;); const path = require(&#39;path&#39;); const HTMLPlugin = require(&#39;html-webpack-plugin&#39;); const SRC_DIR = path.</description>
    </item>
    
    <item>
      <title>Cấu hình webpack nâng cao</title>
      <link>http://io.misostack.com/posts/webpack-002/</link>
      <pubDate>Tue, 27 Feb 2018 16:46:50 +0700</pubDate>
      
      <guid>http://io.misostack.com/posts/webpack-002/</guid>
      <description>Seperate Config between production and development npm install webpack-merge --save-dev npm install uglifyjs-webpack-plugin --save-dev  Remove file webpack.config.js thành 3 file
webpack.common.js webpack.dev.js webpack.prod.js  webpack.common.js
const webpack = require(&#39;webpack&#39;); //to access built-in plugins const path = require(&#39;path&#39;); const SRC_DIR = path.resolve(__dirname,&#39;src&#39;); const DIST_DIR = path.resolve(__dirname, &#39;dist&#39;); const ASSET_PATH = process.env.ASSET_PATH || &#39;&#39;; module.exports = { entry: { app: SRC_DIR + &#39;/index.js&#39; }, plugins: [ ], output: { path: DIST_DIR, filename: &#39;[name].</description>
    </item>
    
    <item>
      <title>Webpack</title>
      <link>http://io.misostack.com/posts/webpack/</link>
      <pubDate>Tue, 27 Feb 2018 13:55:35 +0700</pubDate>
      
      <guid>http://io.misostack.com/posts/webpack/</guid>
      <description>Sample Setup Khởi tạo npm package.json npm init  Install webpack package npm install webpack webpack-cli webpack-dev-server --save-dev  Thiết lập cây thư mục /dist/index.html .gitignore package.json /src/index.js /src/hello.js webpack.config.js  .gitignore
# dependencies /node_modules # misc .DS_Store .env.local .env.development.local .env.test.local .env.production.local npm-debug.log* yarn-debug.log* yarn-error.log*  dist/index.html
&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Example For Webpack&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;quot;app&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script src=&amp;quot;app.bundle.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  src/index.js
import hello from &#39;./hello&#39;; hello();  src/hello.js</description>
    </item>
    
  </channel>
</rss>